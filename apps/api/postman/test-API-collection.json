{
	"info": {
		"_postman_id": "a3ba9e7f-c92b-423c-a131-8b76cf5a9568",
		"name": "test-API-shopping-list",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19852561"
	},
	"item": [
		{
			"name": "should generate token for user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"token_user1\", pm.response.json().token);",
							"",
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user1}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/login_check",
					"host": [
						"{{url}}api"
					],
					"path": [
						"login_check"
					]
				}
			},
			"response": []
		},
		{
			"name": "should generate token for user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"token_user2\", pm.response.json().token);",
							"",
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user2}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/login_check",
					"host": [
						"{{url}}api"
					],
					"path": [
						"login_check"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should read departements",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/departments",
					"host": [
						"{{url}}api"
					],
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should read specific department",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/departments/2",
					"host": [
						"{{url}}api"
					],
					"path": [
						"departments",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should create product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"lastProductid\", pm.response.json()['id']);",
							"",
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"salade\",\n    \"department\": \"{{url}}api/departments/1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/products",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticated user should read products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/products",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should read own specific product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Update Name\", function(){",
							"    pm.expect(pm.response.json()['name']).to.eql(\"salade\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not read user 1 specific product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should update own product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Update Name\", function(){",
							"    pm.expect(pm.response.json()['name']).to.eql(\"poivron\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"poivron\",\n    \"department\": \"{{url}}api/departments/2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not update user 1 product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"poivron\",\n    \"department\": \"{{url}}api/departments/2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not update specific product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"poivron\",\n    \"department\": \"{{url}}api/departments/2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not remove user 1 product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should remove product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not create products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/products",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not read products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/products",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not read specific product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not update specific product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"poivron\",\n    \"department\": \"{{url}}api/departments/2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not remove sepcific product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}api/products/{{lastProductid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"products",
						"{{lastProductid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user1}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/users",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should not create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user1}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/users",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not read users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/users",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should not read users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/users",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not read specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}api/users/1",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should not read specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/users/1",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not update specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user1}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/users/1",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should not update specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"new name\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/users/1",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not remove specific user Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/users/1",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should not update specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/users/1",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should create a shopping list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"lastShoppingListid\", pm.response.json()['id']);",
							"",
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"a new shopping list\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/shopping_lists",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticated user should read shopping lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/shopping_lists",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should read own specific shopping lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Update Name\", function(){",
							"    pm.expect(pm.response.json()['name']).to.eql(\"a new shopping list\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/shopping_lists/{{lastShoppingListid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists",
						"{{lastShoppingListid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not read user 1 specific shopping list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/shopping_lists/{{lastShoppingListid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists",
						"{{lastShoppingListid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should update own shopping list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Update Name\", function(){",
							"    pm.expect(pm.response.json()['name']).to.eql(\"an other name\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"an other name\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/shopping_lists/{{lastShoppingListid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists",
						"{{lastShoppingListid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not  update user 1 shopping list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"an other name\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/shopping_lists/{{lastShoppingListid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists",
						"{{lastShoppingListid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not  update shopping list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"an other name\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/shopping_lists/{{lastShoppingListid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists",
						"{{lastShoppingListid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not  delete user 1 shopping list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/shopping_lists/{{lastShoppingListid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists",
						"{{lastShoppingListid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should delete own shopping list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/shopping_lists/{{lastShoppingListid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"shopping_lists",
						"{{lastShoppingListid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not create an item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"quantity\": 2,\n  \"shoppingList\": \"/api/shopping_lists/1\",\n  \"product\": \"/api/products/8\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/item_lists",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1 should create an item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"lastItemid\", pm.response.json()['id']);",
							"",
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"quantity\": 2,\n  \"shoppingList\": \"/api/shopping_lists/1\",\n  \"product\": \"/api/products/8\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/item_lists",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not read item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/item_lists",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "authneticated user should read item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/item_lists",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1  should read own item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/item_lists/{{lastItemid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists",
						"{{lastItemid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2  should not read user 1 item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}api/item_lists/{{lastItemid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists",
						"{{lastItemid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1  should update own specific item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(200)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"quantity\": 8\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/item_lists/{{lastItemid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists",
						"{{lastItemid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not update user 1 specific item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"quantity\": 8\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/item_lists/{{lastItemid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists",
						"{{lastItemid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unauthenticated user should not update specific item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"quantity\": 8\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/item_lists/{{lastItemid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists",
						"{{lastItemid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 2 should not update user 1 specific item list Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(401)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/item_lists/{{lastItemid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists",
						"{{lastItemid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user 1  should delete own specific item list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function() {",
							"    pm.response.to.have.status(204)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/item_lists/{{lastItemid}}",
					"host": [
						"{{url}}api"
					],
					"path": [
						"item_lists",
						"{{lastItemid}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}